// const getOneTransaction = (transactionID) => {

//     const result = {
//         users: [],
//         transactions: []
//       };
    

//     transactionId =  "a534f09b6983492f05c19c8a35024ca7109511f2057ae54b18b6bfd1b6d13af6"

//     const foundTransaction = data.find(transaction => transaction.id === transactionId);

// if (foundTransaction) {
//     const inputs = foundTransaction.inputs[0];
//     const outputs = foundTransaction.outputs;

//     // Add users to the result.users array
//     inputs.owners_before.forEach(owner => {
//     if (!result.users.includes(owner)) {
//         result.users.push(owner);
//       }
//     });

//     outputs.forEach(output => {
//       output.public_keys.forEach(owner => {
//         if (!result.users.includes(owner)) {
//           result.users.push(owner);
//         }
//       });
//     });

//     // Add transaction to the result.transactions array
//     outputs.forEach(output => {
//       const from = inputs.owners_before[0];
//       const to = output.public_keys[0];
//       const amount = output.amount;

//       result.transactions.push({ from, to, amount });
//     });
//   }

//   return result;

// }



// Generate Test Data

// const generateTestData = () => {

//   const startTime = new Date("2023-11-01T00:00:00Z");
//   const endTime = new Date("2023-11-30T23:59:59Z");
//   const numTransactions = 50;
//   const transactions = [];

//   for (let i = 0; i < numTransactions; i++) {
//     const timestamp = new Date(
//       startTime.getTime() +
//         Math.random() * (endTime.getTime() - startTime.getTime())
//     ).toISOString();

//     transactions.push({
//       from: `user${Math.floor(Math.random() * 10) + 1}`,
//       to: `user${Math.floor(Math.random() * 10) + 1}`,
//       amount: Math.floor(Math.random() * 10) + 1,
//       timestamp,
//     });
//   }

//   return transactions;
// };

// Example usage
// const startTime = new Date("2023-11-01T00:00:00Z");
// const endTime = new Date("2023-11-30T23:59:59Z");
// const testData = generateTestData(50, startTime, endTime);

// console.log(JSON.stringify(testData, null, 2));

// console.log(testData);


//getTransactionsByTimeRange (inputs, outputs)

// const getTransactionsByTimeRange = (transactions, startTime, endTime) => {
//   const result = {
//     users: [],
//     transactions: [],
//   };

//   transactions.forEach((transaction) => {
//     const inputs = transaction.inputs[0];
//     const outputs = transaction.outputs;

//     // Add users to the result.users array
//     inputs.owners_before.forEach((owner) => {
//       if (!result.users.includes(owner)) {
//         result.users.push(owner);
//       }
//     });

//     outputs.forEach((output) => {
//       output.public_keys.forEach((owner) => {
//         if (!result.users.includes(owner)) {
//           result.users.push(owner);
//         }
//       });
//     });

//     // Add transaction to the result.transactions array if it falls within the specified time range
//     const timestamp =
//       transaction.metadata && transaction.metadata.timestamp
//         ? transaction.metadata.timestamp
//         : null;
//     if (timestamp && timestamp >= startTime && timestamp <= endTime) {
//       outputs.forEach((output) => {
//         const from = inputs.owners_before[0];
//         const to = output.public_keys[0];
//         const amount = output.amount;

//         result.transactions.push({ from, to, amount, timestamp });
//       });
//     }
//   });

//   return result;
// };